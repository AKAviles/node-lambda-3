org: akaviles024
app: node-lambda-3
service: node-lambda-3
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  apiGateway:
    restApiId: ${cf:shared-gateway-dev.apiGatewayRestApiId}
    restApiRootResourceId: !Ref rApiGatewaySocial
functions:
  admins:
    handler: index.handler
    events:
      - http:
          path: ""
          method: get

resources:
  - Resources:
      rApiGatewayAdmins:
        Type: AWS::ApiGateway::Resource
        Properties:
          ParentId: ${cf:shared-gateway-dev.apiGatewayRestApiId}
resources:
  - Resources:
      rApiGatewayAdmins1:
        Type: AWS::ApiGateway::Resource
        Properties:
          ParentId: ${cf:node-lambda-2-dev.oApiGatewayAdminsId}
          PathPart: admins1
          RestApiId: ${cf:shared-gateway-dev.apiGatewayRestApiId}
      rApiGatewaySocial:
        Type: AWS::ApiGateway::Resource
        Properties:
          ParentId: !Ref rApiGatewayAdmins1
          PathPart: social
          RestApiId: ${cf:shared-gateway-dev.apiGatewayRestApiId}
  - Outputs:
      oApiGatewayAdmins1Id:
        Value:
          Ref: rApiGatewayAdmins1
        Export:
          Name: admins1-apigateway
      oApiGatewayAdmin1SocialId:
        Value:
          Ref: rApiGatewaySocial
        Export:
          Name: social-gateway